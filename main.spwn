extract obj_props
extract $

code = readfile("encoded_trace.json", "json")

//incomplete because spwn can't use some 2.2 features
//for some reason, in an item edit trigger,  the object key "TARGET" can fill "Target ItemID" even though they are not the same type and "ITEM" can fill "ItemID1" 

add(obj{
    OBJ_ID: 1,
    X: 105,
    Y: 75,
})

add(obj{
    OBJ_ID: 1268,
    X: 105,
    Y: 70,
    TARGET: 9990g,
    TOUCH_TRIGGERED: true,
})

add(obj{
    OBJ_ID: 1268,
    X: 165,
    Y: 75,
    TARGET: 9990g,
    SPAWN_DURATION: 0.1,
    SPAWN_TRIGGERED: true,
    MULTI_TRIGGER: true,
    GROUPS: 9990g,
})

add(obj{
    OBJ_ID: 3607,
    X: 225,
    Y: 75,
    // SEQUENCE: [[code[i] as @group, 1] for i in 0..code.length],
    SPAWN_TRIGGERED: true,
    MULTI_TRIGGER: true,
    GROUPS: 9990g,
})

instructions = readfile("unique_instructions.json", "json")

let group = instructions.length

for i in 0..group{
    if(instructions[i][0] == "subl"){
        if(instructions[i][2] == "imm"){
            add(obj{
                OBJ_ID: 1817,
                X: 105 + 30 * i,
                Y: 135,
                COUNT: -instructions[i][1],
                ITEM: instructions[i][3] as @item,
                SPAWN_TRIGGERED: true,
                MULTI_TRIGGER: true,
                GROUPS: i as @group,
            }) 
        }
        else if (instructions[i][2] == "reg"){
            //would need to somehow specify we want substraction in the item edit trigger, select "item" boxes and set the modifier to 1
            add(obj{
                OBJ_ID: 3619,
                X: 105 + 30 * i,
                Y: 135,
                ITEMID1: instructions[i][3] as @item,
                TARGET: instructions[i][1],
                // MOD: 1,
                // OPERATION_1: "-",
                SPAWN_TRIGGERED: true,
                MULTI_TRIGGER: true,
                GROUPS: i as @group,
            }) 
        }
    }
    else if(instructions[i][0] == "addl"){
        if(instructions[i][2] == "imm"){
            add(obj{
                OBJ_ID: 1817,
                X: 105 + 30 * i,
                Y: 135,
                COUNT: instructions[i][1],
                ITEM: instructions[i][3] as @item,
                SPAWN_TRIGGERED: true,
                MULTI_TRIGGER: true,
                GROUPS: i as @group,
            }) 
        }
        else if (instructions[i][2] == "reg"){
            //would need to somehow specify we want addition in the item edit trigger, select "item" boxes and set the modifier to 1
            add(obj{
                OBJ_ID: 3619,
                X: 105 + 30 * i,
                Y: 135,
                // ITEMID1: instructions[i][3] as @item,
                TARGET: instructions[i][1],
                // MOD: 1,
                // OPERATION_1: "+",
                SPAWN_TRIGGERED: true,
                MULTI_TRIGGER: true,
                GROUPS: i as @group,
            }) 
        }
    }
    else if(instructions[i][0] == "movl"){
        if(instructions[i][2] == "imm"){
            add(obj{
                OBJ_ID: 1817,
                X: 105 + 30 * i,
                Y: 135,
                COUNT: instructions[i][1],
                ITEM: instructions[i][3] as @item,
                // OVERRIDE: true,
                SPAWN_TRIGGERED: true,
                MULTI_TRIGGER: true,
                GROUPS: i as @group,
            }) 
        }
        else if (instructions[i][2] == "reg"){
            //would need to somehow select "item" boxes and set the modifier to 1
            add(obj{
                OBJ_ID: 3619,
                X: 105 + 30 * i,
                Y: 135,
                // ITEMID1: instructions[i][3] as @item,
                TARGET: instructions[i][1],
                // MOD: 1,
                SPAWN_TRIGGERED: true,
                MULTI_TRIGGER: true,
                GROUPS: i as @group,
            }) 
        }
    }
    else if(instructions[i][0] == "idivl"){
        //would need to somehow select "item" boxes and set the modifier to 1
        add(obj{
            OBJ_ID: 3619,
            X: 105 + 30 * i,
            Y: 135,
            // ITEMID1: 9500i,
            // ITEMID2: instructions[i][1] as @item,
            TARGET: 9505,
            // MOD: 1,
            // OPERATION_2: "/",
            SPAWN_TRIGGERED: true,
            MULTI_TRIGGER: true,
            GROUPS: i as @group,
        })
        add(obj{
            OBJ_ID: 3619,
            X: 106 + 30 * i,
            Y: 165,
            // ITEMID1: instructions[i][1] as @item,
            // ITEMID2: 9505i,
            TARGET: 9503,
            // MOD: 1,
            // OPERATION_2: "*",
            SPAWN_TRIGGERED: true,
            MULTI_TRIGGER: true,
            GROUPS: i as @group,
        }) 
        add(obj{
            OBJ_ID: 3619,
            X: 107 + 30 * i,
            Y: 195,
            // ITEMID1: 9500i,
            // ITEMID2: 9503i,
            TARGET: 9503,
            // MOD: 1,
            // OPERATION_2: "-",
            SPAWN_TRIGGERED: true,
            MULTI_TRIGGER: true,
            GROUPS: i as @group,
        }) 
        add(obj{
            OBJ_ID: 3619,
            X: 108 + 30 * i,
            Y: 225,
            // ITEMID1: 9505i,
            TARGET: 9500,
            // MOD: 1,            
            SPAWN_TRIGGERED: true,
            MULTI_TRIGGER: true,
            GROUPS: i as @group,
        }) 
    }
    else if(instructions[i][0] == "stop"){
        add(obj{
            OBJ_ID: 1616,
            X: 105 + 30 * i,
            Y: 135,
            TARGET: 9990g,
            SPAWN_TRIGGERED: true,
            MULTI_TRIGGER: true,
            GROUPS: i as @group,
        }) 
        add(obj{
            OBJ_ID: 3600,
            X: 106 + 30 * i,
            Y: 165,
            SPAWN_TRIGGERED: true,
            MULTI_TRIGGER: true,
            GROUPS: i as @group,
        }) 
    }
}